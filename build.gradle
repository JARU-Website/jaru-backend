plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.web'
version = '0.0.1-SNAPSHOT'

java {
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
}

repositories { mavenCentral() }

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok:1.18.22'

    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // HttpClient 5
    // ✅ Apache HttpComponents 5.x — 버전 명시 제거(부트 BOM에 맡김)
    implementation('org.apache.httpcomponents.client5:httpclient5') {
        // HTTP/2 코어 모듈이 버전 충돌의 주범일 수 있어 우선 제외
        exclude group: 'org.apache.httpcomponents.core5', module: 'httpcore5-h2'
    }
    // 코어는 명시 추가 (BOM이 버전 맞춰줌)
    implementation 'org.apache.httpcomponents.core5:httpcore5'

    // Querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // coolsms
    implementation 'net.nurigo:sdk:4.3.0'

    // oauth
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
}

def querydslDir = "$buildDir/generated/sources/annotationProcessor/java/main"

sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", querydslDir]
        }
    }
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

tasks.named('test') {
    useJUnitPlatform()
}
